#!/usr/bin/env ruby
require 'fileutils'
require 'optparse'

options = {}

# Set up the option parser
OptionParser.new do |opts|
  opts.banner = "Usage: transform-nextjs.rb [options]"

  opts.on('-d', '--directory DIRECTORY', 'Directory to rename files in') do |dir|
    options[:directory] = dir
  end
end.parse!

$directory = options[:directory] || '.'


$new_dir = "#{$directory}_t"
FileUtils.mkdir_p($new_dir)
# Recursive function to navigate the directory tree
def process_directory(directory)
  # Get the absolute path of the directory
  absolute_directory = File.absolute_path(directory)

  # List all files in the directory
  Dir.foreach(absolute_directory) do |filename|
    # Skip special directories '.' and '..'
    next if filename == '.' || filename == '..'

    # Get the absolute path of the file
    absolute_filename = File.join(absolute_directory, filename)

    # If the file is a directory, recursively process it
    if File.directory?(absolute_filename)
      process_directory(absolute_filename)
    elsif filename.end_with?('.md')

      contents = File.read(absolute_filename)
      if contents.include?('archbee-image-uploads')
        # Get the new directory name (without the .md extension)
        new_dir = File.join(absolute_directory.sub($directory, $new_dir), filename[0...-3])
        FileUtils.mkdir_p(new_dir)

        # Move the .md file into the new directory and rename it to index.md
        FileUtils.cp(absolute_filename, File.join(new_dir, 'index.md'))
      else
        new_dir = absolute_directory.sub($directory, $new_dir)
        FileUtils.mkdir_p(new_dir)
        FileUtils.cp(absolute_filename, absolute_directory.sub($directory, $new_dir))
      end
    end
  end
end

# Start processing from the root directory
process_directory($directory)


