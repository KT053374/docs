#!/usr/bin/env ruby
# Require the optparse library to parse command-line options
require 'optparse'
require 'fileutils'

# Set up an options hash to hold our command-line options
options = {}

# Set up the option parser
OptionParser.new do |opts|
  opts.banner = "Usage: rename.rb [options]"

  opts.on('-d', '--directory DIRECTORY', 'Directory to rename files in') do |dir|
    options[:directory] = dir
  end
end.parse!

# Use the directory provided, or if none was provided, use the current directory
directory = options[:directory] || '.'

FileUtils.mkdir_p(directory.gsub(/\s/, '_').downcase)

# Get all files in the specified directory
Dir.glob(File.join(directory, "*")).each do |file|
  # Skip if file is actually a directory
  next if File.directory?(file)

  # Transform the file name: replace spaces with underscores and convert to lowercase
  new_name = file.gsub(/\s/, '_').downcase

  # Only rename the file if the name has changed
  if file != new_name
    # Rename the file, being careful not to overwrite an existing file
    if File.exist?(new_name)
      puts "Cannot rename #{file} to #{new_name}, file already exists"
    else
      FileUtils.cp(file, new_name)
      puts "Copied #{file} to #{new_name}"
    end
  end
end

